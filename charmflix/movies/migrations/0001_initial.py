# Generated by Django 3.0.14 on 2022-05-24 20:32

from django.db import migrations, models
import django.db.models.deletion
import movies.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Actors',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=150)),
                ('slug', models.SlugField(blank=True, max_length=150)),
            ],
            options={
                'verbose_name': 'actor',
                'verbose_name_plural': 'actors',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=150)),
                ('slug', models.SlugField(blank=True, max_length=150, unique=True)),
            ],
            options={
                'verbose_name': 'category',
                'verbose_name_plural': 'categories',
            },
        ),
        migrations.CreateModel(
            name='Directors',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=150)),
                ('slug', models.SlugField(blank=True, max_length=150)),
            ],
            options={
                'verbose_name': 'director',
                'verbose_name_plural': 'directors',
            },
        ),
        migrations.CreateModel(
            name='Scriptwriter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=150)),
                ('slug', models.SlugField(blank=True, max_length=150)),
            ],
            options={
                'verbose_name': 'scriptwriter',
                'verbose_name_plural': 'scriptwriters',
            },
        ),
        migrations.CreateModel(
            name='Studio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=150)),
                ('slug', models.SlugField(blank=True, max_length=150)),
            ],
            options={
                'verbose_name': 'Studio',
                'verbose_name_plural': 'Studio',
            },
        ),
        migrations.CreateModel(
            name='Film',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=150)),
                ('rate', models.FloatField(default=0)),
                ('releaseyear', models.IntegerField(blank=True, default=2000)),
                ('runningtime', models.IntegerField(blank=True, default=10)),
                ('country', models.CharField(blank=True, max_length=150)),
                ('thumbnail', models.ImageField(blank=True, upload_to='movies/thumbnails')),
                ('desciption', models.TextField(max_length=20000)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('is_published', models.BooleanField(default=True)),
                ('video', models.FileField(upload_to='movie/%y', validators=[movies.validators.file_size])),
                ('actors', models.ManyToManyField(blank=True, to='movies.Actors')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='films', to='movies.Category')),
                ('directors', models.ManyToManyField(blank=True, to='movies.Directors')),
                ('scriptwriter', models.ManyToManyField(blank=True, to='movies.Scriptwriter')),
                ('studio', models.ManyToManyField(blank=True, to='movies.Studio')),
            ],
        ),
    ]
